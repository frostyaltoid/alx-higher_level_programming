	Functions takes in a matrix and div, divides elements of a matrix.
	Returns a new matrix

	Here are some tests..

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

	>>> matrix = [
	...		[3, 4, 5],
	...		[5, 6, 7]
	...		]

	>>> matrix2 = [8, 8, 7]

	>>> matrix3 = [
	...		[3, '5', 8],
	...		[6, 8, 9]
	...		]

	>>> matrixx = [
	...		[3, 4, 5],
	...		[5, 6, 7, 8]
	...		]

	>>> matrix_divided(matrix, 'div')
	Traceback (most recent call last):
		...
	TypeError: div must be a number

	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero
	
	>>> matrix_divided(matrix, 2)
	[[1.5, 2.0, 2.5], [2.5, 3.0, 3.5]]

	>>> matrix_divided(matrix2, 2)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided(matrix3, 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided(matrixx, 2)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided(matrix, 2.3)
	Traceback (most recent call last):
		...
	TypeError: div must be a number

	>>> matrix_divided(matrix)
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> matrix_divided()
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
