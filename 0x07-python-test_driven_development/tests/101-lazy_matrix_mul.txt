	A function to multiply two matrices using Numpy.
	
	>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
	
	>>> matrix_A = [[1,2,3],[4,5,6],[7,8,9],[10,11,12]]
	>>> matrix_B = [[1,2],[1,2],[3,4]]

	>>> lazy_matrix_mul(matrix_A, matrix_B)
	matrix([[12, 18],
		[27, 42],
		[42, 66],
		[57, 90]])

	>>> matrix_A = [1,2,3]
	>>> matrix_B = [[1,2],[1,2],[3,4]]
	>>> lazy_matrix_mul(matrix_A, matrix_B)
	matrix([[12, 18]])
	
	>>> lazy_matrix_mul(matrix_B, matrix_A)
	Traceback (most recent call last):
		...
	ValueError: shapes (3,2) and (1,3) not aligned: 2 (dim 1) != 1 (dim 0)

	>>> matrix_A = [[],[]]
	>>> matrix_B = [[1,2],[1,2]]
	>>> lazy_matrix_mul(matrix_A, matrix_B)
	Traceback (most recent call last):
		...
	ValueError: shapes (2,0) and (2,2) not aligned: 0 (dim 1) != 2 (dim 0)

	>>> matrix_A = [[1,2,3],[4,5,6],[7,8,9],[10,11,'str']]
	>>> matrix_B = [[1,2],[1,2]]
	>>> lazy_matrix_mul(matrix_A, matrix_B)
	Traceback (most recent call last):
		...
	ValueError: shapes (4,3) and (2,2) not aligned: 3 (dim 1) != 2 (dim 0)
	
	>>> matrix_A = [[1,2,3],[4,5,6],[7,8,9],[10,11]]
	>>> matrix_B = [[1,2],[1,2],[3,4]]
	>>> lazy_matrix_mul(matrix_A, matrix_B)
	Traceback (most recent call last):
		...
	ValueError: shapes (1,4) and (3,2) not aligned: 4 (dim 1) != 3 (dim 0)

	>>> lazy_matrix_mul(matrix_A)
	Traceback (most recent call last):
		...
	TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'
